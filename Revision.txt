1)Java is a high level object oriented programing language.
  java is platform independent because we can type once and run anywhere, .class file can be executed anywhere across the OS.
  
2)It is a intermediate low level code when we comppiled the source code.,which is generated by using the jdk build tools  called javac

3)JVM provides the Run time environment
  JVM loads the code
  JVM Checks the code
  JVM Executes the code
  
4)JDK is a comprehensive software tool kit(JAVA DEVELOPMENT KIT) which helps to run and execute the program.
  JDK contains JRE and Build tools ;JRE provides the run time environment to the java program,Build tools are the tools which
  helps to perform a specific task of a program like compliling javac ,Javadoc,java,jar etc;
  JRE contains JVM and Set of Libraries ;JVM (JAVA VIRTUTAL MACHINE) it helps to covert the bytecode to human understandable language
  jvm acts as a interpreter and it executes from line by line;
  JVM starts the Execution from the main method;
  libraries contains all the required the methods or tools inside of it and it checks the code;
  
5)Variables is a name given to the Memory allocation.

6)It is a type of a data where variables are refers to.

7)Primitive :It is pre defined and It has a fixed size,It starts with a small letter.
  It has 8 types:byte,short,int,long,boolean,char,float,double;
  
  Non-Primitive: It is pre defined and also a user defined,and its sizes are not fixed,
  And It starts with a capital letter.
  It has Many types like String, Array and Custom classes.

8)These are the values which is provided by the JVM when we dont assign the values for the data types.
  We get default values for only static variables.
  
9)class DefaultValue{
static byte kilo;
static short ton;
static int price;
static long phoneNumber;
static boolean isAvailable;
static char variety;
static float gst;
static double reviews;
static String contents;
publ;ic static void main(String[] args){
System.out.println(kilo);
System.out.println(ton);
System.out.println(price);
System.out.println(phoneNumber);
System.out.println(isAvailable);
System.out.println(variety);
System.out.println(contents);
System.out.println(gst);
System.out.println(reviews);


}
}

10)  class LocalVariables{
		   public static void main(String[] args){
			   int price=25;
			   price=25;
			   System.out.println("The price of Laptop is:"+price);
		   }
	   }
	   
	   

	   
	    class StaticVariables{
			static int price=25;
			static boolean isTrue=false;
		   public static void main(String[] args){
			   price=30;
			   isTrue=true;
			   
			   System.out.println("The price of Laptop is:"+price);
			   System.out.println("The Values are:"+isTrue);
		   }
	   }
  
11))Method chaining is process where we call the method inside the method. it is like connecting the method like a chain.
                      
					  class GymSchedule{
						public static void monday(){
						System.out.println("Monday i do Chest and Tricep workout ");
								tuesday();

							}	
							public static void tuesday(){
							System.out.println("Tuesday i do Back and Biceep workout");
								wednesday();

								}
								public static void wednesday(){
								System.out.println("Wednesday i do Shoulders  and Forearm workout");
								thursday();
									}
								public static void thursday(){
									System.out.println("Thursday i do Chest  and Tricep workout");
									friday();
										}
									public static void friday(){
									System.out.println("Friday i do Back and Biceep workout");
									saturday();
											}
									public static void saturday(){
									System.out.println("Saturday i do Leg workout");

									}
									public static void main(String [] args){
									 		monday();
	                                      }
				                        }

12)class Rturn value{

public static byte litre(){
	System.out.println("The litre is..");
	return 2;
	
}
public static short require(){
	System.out.println("The Required is..");
	return 69;
	
}
public static int price(){
	System.out.println("The Price is ..");
	return 1258336;
	
}
public static long contact(){
	System.out.println("Please contact");
	return 1234567890l;
	
}
public static char type(){
	System.out.println("The type is..");
	return 'O';
}
public static float review(){
	System.out.println("The Review is");
	return 4.5f;
	
}
public static double gst(){
	System.out.println("The GST is..");
	return 18.5;
}
public static boolean isAvailable(){
	return true;
}
public static void main(String [] args){
	
	System.out.println(litre());
	System.out.println(require());
	System.out.println(price());
	System.out.println(contact());
	System.out.println(type());
	System.out.println(review());
	System.out.println(gst());
	System.out.println(isAvailable());
	
}
}
  
  
13)class ParameterizedVariables{
public static void start(char model){
System.out.println("The model of the car is:"+model);
}
public static void ready(String name){
System.out.println("The name of teh Car is:"+name);
}

public static void money(int price){
System.out.println("The Price of the Car is"+price);
}
public static void tel(long phoneNo){
System.out.println("The Owner PhoneNo is:"+phoneNo);
}
public static void review(float ratings){
System.out.println("The car ratings is:"+ratings);
}

public static void check(boolean present){
System.out.println(" Is Car present?"+present);
}

public static void main(String[] args){
	start('S');
	ready("MERCEDES MAYBACH");
	money(1765368);
	tel(1234567891l);
	review(9.5f);
	check(true);


}
}

14)Array is Collection of a elements with same datatype;

  class ArrayReverse{
  public static void main(String[] args){
  
  int [] numbers={1,2,3,4,5,6,7,8};
  
  for(int i=numbers.length-1; i>=0;i--){
  System.out.println("The datas are:"+numbers[i]);
  }
  }
  
  }